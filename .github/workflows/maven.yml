# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.



name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 23
      uses: actions/setup-java@v4
      with:
        java-version: '23'
        distribution: 'temurin'
        cache: maven

    - name: Compile the code
      run: mvn compile

    - name: Run tests
      run: mvn test  # Ensures all unit tests pass before allowing push

    - name: Generate Javadoc
      run: mvn javadoc:javadoc  # Generates Javadoc to ensure documentation builds correctly

    - name: Move Javadoc to javadoc folder
      run: |
        rm -rf javadoc  # Delete old Javadoc
        mkdir -p javadoc
        cp -r target/site/apidocs/* javadoc/

    - name: Commit and Push Javadoc to main branch
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions@github.com"
        git add javadoc/
        git commit -m "Auto-update Javadoc"
        git push origin main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  

    - name: Build with Maven
      run: mvn -B package --file pom.xml

  
