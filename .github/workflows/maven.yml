# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.



# This workflow builds a Java project with Maven, runs tests, generates Javadoc, and makes it downloadable
# For more information, see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 23
      uses: actions/setup-java@v4
      with:
        java-version: '23'
        distribution: 'temurin'
        cache: maven

    - name: Compile the code
      working-directory: cd "3rd Delivery"
      run: mvn compile

    - name: Run tests
      working-directory: cd "3rd Delivery"
      run: mvn test  # Ensures all unit tests pass before allowing push

    - name: Generate Javadoc
      working-directory: cd "3rd Delivery"
      run: mvn javadoc:javadoc  # Generates Javadoc

    - name: Build with Maven
      working-directory: cd "3rd Delivery"
      run: mvn -B package --file pom.xml

    - name: Upload Javadoc as an artifact
      uses: actions/upload-artifact@v4
      with:
        name: javadoc
        path: 3rd Delivery/target/site/apidocs  # This is the default output folder for Javadoc
        retention-days: 7  # Javadoc will be stored for 7 days

  
